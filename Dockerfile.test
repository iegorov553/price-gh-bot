# Multi-stage Dockerfile for testing
# Optimized for fast test execution and caching

FROM python:3.12-slim as base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Install Python dependencies
COPY requirements.txt requirements-dev.txt ./
RUN pip install --no-cache-dir -r requirements.txt -r requirements-dev.txt

# Install Playwright browsers for e2e tests
RUN playwright install chromium

# Production test stage
FROM base as test

# Copy source code
COPY . .

# Set test environment variables
ENV ENVIRONMENT=test
ENV BOT_TOKEN=8026508902:AAGWJKei_EyPkpc4x-lt-qFQo53829gQIrU
ENV ENABLE_HEADLESS_BROWSER=true
ENV LOG_LEVEL=INFO

# Run tests by default
CMD ["pytest", "tests_new/", "-v", "--tb=short", "--maxfail=5"]

# Development test stage with mounted volumes
FROM base as test-dev

# Set development environment
ENV ENVIRONMENT=test
ENV BOT_TOKEN=8026508902:AAGWJKei_EyPkpc4x-lt-qFQo53829gQIrU
ENV ENABLE_HEADLESS_BROWSER=true
ENV LOG_LEVEL=DEBUG

# Create directories for mounted volumes
RUN mkdir -p /app/tests_new /app/app

# Default command for development
CMD ["bash", "-c", "echo 'Test environment ready. Use: docker exec -it <container> pytest tests_new/' && tail -f /dev/null"]